digraph G{
Node_1 [ label ="Private Function mSameChrgSchmStDt(ByRef pbEmptyDt As Boolean)\nOn Error GoTo ERR_SYSTEM\nDim loRecSet As OGTRecordSet\nDim llRowCnt As Long\nDim llCnt As Long\nDim llCurr As Long\nDim ldtCurrSt As Date\nmSameChrgSchmStDt = False\npbEmptyDt = False",shape="box"];
Node_2 [ label ="ProdCat = 'CIF'  ?",shape="diamond"];
Node_3 [ label ="Set loRecSet = TransObj.Item('BILL_CHRG_SCHM_CIF')",shape="box"];
Node_4 [ label ="Set loRecSet = TransObj.Item(GT_RS_BILL_CHRG_SCHM_LC)",shape="box"];
Node_5 [ label ="endif",shape="box"];
Node_6 [ label ="Not loRecSet Is Nothing  ?",shape="diamond"];
Node_7 [ label ="llRowCnt = loRecSet.RowCount\nllCurr = loRecSet.CurrentRow\nldtCurrSt = loRecSet.GetAttr('EFF_FROM_DT')",shape="box"];
Node_8 [ label ="DateDiff('d', ldtCurrSt, EMPTY_DT) = 0  ? pbEmptyDt = True",shape="diamond"];
Node_9 [ label ="For llCnt = 0 To llRowCnt - 1",shape="Mdiamond"];
Node_10 [ label ="llCnt <> llCurr  ?",shape="diamond"];
Node_11 [ label ="loRecSet.CurrentRow = llCnt",shape="box"];
Node_12 [ label ="ProdCat = 'CIF'  ?",shape="diamond"];
Node_13 [ label ="DateDiff('d', ldtCurrSt, loRecSet.GetAttr('EFF_FROM_DT')) = 0 _",shape="diamond"];
Node_14 [ label ="And loRecSet.GetAttr('CHRG_LVL') = CIF_LEVEL_VALUE And cboChrgStartDay.Text = '' Then\nmSameChrgSchmStDt = True\nExit For",shape="box"];
Node_15 [ label ="endif",shape="box"];
Node_16 [ label ="DateDiff('d', ldtCurrSt, loRecSet.GetAttr('EFF_FROM_DT')) = 0 _",shape="diamond"];
Node_17 [ label ="And loRecSet.GetAttr('CHRG_LVL') = LC_LEVEL_VALUE Then\nmSameChrgSchmStDt = True\nExit For",shape="box"];
Node_18 [ label ="endif",shape="box"];
Node_19 [ label ="endif",shape="box"];
Node_20 [ label ="endif",shape="box"];
Node_21 [ label ="Next\nloRecSet.CurrentRow = llCurr",shape="box"];
Node_22 [ label ="endif\nExit Function\nERR_SYSTEM:\nCall DEFAULT_ERROR_HANDLE_PROCEDURE('frmBillingSch.mSameChrgSchmStDt', pbEmptyDt)\nEnd Function",shape="box"];
Node_2 -> Node_3 [label="True",fontcolor="GREEN"];
Node_1 -> Node_2;
Node_2 -> Node_4 [label="False",fontcolor="RED"];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7 [label="True",fontcolor="GREEN"];
Node_5 -> Node_6;
Node_8 -> Node_9 [label="True",fontcolor="GREEN"];
Node_7 -> Node_8;
Node_9 -> Node_10 [label="True",fontcolor="GREEN"];
Node_10 -> Node_11 [label="True",fontcolor="GREEN"];
Node_12 -> Node_13 [label="True",fontcolor="GREEN"];
Node_11 -> Node_12;
Node_13 -> Node_14 [label="True",fontcolor="GREEN"];
Node_13 -> Node_15 [label="FALSE",fontcolor="RED"];
Node_14 -> Node_15;
Node_12 -> Node_16 [label="False",fontcolor="RED"];
Node_16 -> Node_17 [label="True",fontcolor="GREEN"];
Node_15 -> Node_16;
Node_16 -> Node_18 [label="FALSE",fontcolor="RED"];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_20 [label="FALSE",fontcolor="RED"];
Node_19 -> Node_20;
Node_21 -> Node_9 [label="FALSE",fontcolor="RED"];
Node_21 -> Node_22;
Node_20 -> Node_21;
Node_8 -> Node_22 [label="FALSE",fontcolor="RED"];
}
