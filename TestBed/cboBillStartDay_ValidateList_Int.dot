digraph G{
Node_1 [ label ="Private Sub cboBillStartDay_ValidateList(Text As String, RtnPassed As Integer)\nOn Error GoTo ERR_SYSTEM\nDim StartDys As Date\nDim EndDys As Date\nDim CurrentDt As Date\nDim ErrCode As Long\nDim current As Long\nDim i As Integer",shape="box"];
Node_2 [ label ="ProdCat = 'CIF'  ?",shape="diamond"];
Node_3 [ label ="StartDys = TransObj.Item('BILLING_SCHM_CIF').GetAttr('EFF_FROM_DT')\nEndDys = TransObj.Item('BILLING_SCHM_CIF').GetAttr('EFF_TO_DT')",shape="box"];
Node_4 [ label ="cboBillStartDay.Text <> ''  ?",shape="diamond"];
Node_5 [ label ="current = TransObj.Item('BILLING_SCHM_CIF').CurrentRow\nCurrentDt = cboBillStartDay.Text",shape="box"];
Node_6 [ label ="For i = 0 To TransObj.Item('BILLING_SCHM_CIF').RowCount - 1",shape="Mdiamond"];
Node_7 [ label ="TransObj.Item('BILLING_SCHM_CIF').CurrentRow = i",shape="box"];
Node_8 [ label ="DateDiff('d', CurrentDt, TransObj.Item('BILLING_SCHM_CIF').GetAttr('EFF_FROM_DT')) = 0 And i <> current  ?",shape="diamond"];
Node_9 [ label ="ErrCode = 20007\nRtnPassed = 0\nGlobalErrorMessage = 20007",shape="box"];
Node_10 [ label ="endif",shape="box"];
Node_11 [ label ="Next",shape="box"];
Node_12 [ label ="endif",shape="box"];
Node_13 [ label ="cboBillStartDay.Text <> '' And cboBillEndDay.Text <> '' And ErrCode <> 20007  ?",shape="diamond"];
Node_14 [ label ="DateDiff('d', StartDys, EndDys) < 0  ?",shape="diamond"];
Node_15 [ label ="ErrCode = 80032\nRtnPassed = mcsrvBillStartDay.Validate(Text, StartDys, EndDys, True, ErrCode)",shape="box"];
Node_16 [ label ="endif",shape="box"];
Node_17 [ label ="endif",shape="box"];
Node_18 [ label =" Check ? :  ProdCat = GT_PRD_NLC Or ProdCat = GT_PRD_XLC Then\nendif\nExit Sub\nERR_SYSTEM:\nCall DEFAULT_ERROR_HANDLE_PROCEDURE('frmBillingSch.cboBillStartDay_ValidateList', Text, RtnPassed)\nEnd Sub",shape="box"];
Node_2 -> Node_3 [label="True",fontcolor="GREEN"];
Node_1 -> Node_2;
Node_4 -> Node_5 [label="True",fontcolor="GREEN"];
Node_3 -> Node_4;
Node_6 -> Node_7 [label="True",fontcolor="GREEN"];
Node_5 -> Node_6;
Node_8 -> Node_9 [label="True",fontcolor="GREEN"];
Node_7 -> Node_8;
Node_8 -> Node_10 [label="FALSE",fontcolor="RED"];
Node_9 -> Node_10;
Node_11 -> Node_6 [label="FALSE",fontcolor="RED"];
Node_11 -> Node_12;
Node_10 -> Node_11;
Node_4 -> Node_12 [label="FALSE",fontcolor="RED"];
Node_13 -> Node_14 [label="True",fontcolor="GREEN"];
Node_12 -> Node_13;
Node_14 -> Node_15 [label="True",fontcolor="GREEN"];
Node_14 -> Node_16 [label="FALSE",fontcolor="RED"];
Node_15 -> Node_16;
Node_13 -> Node_17 [label="FALSE",fontcolor="RED"];
Node_16 -> Node_17;
Node_2 -> Node_18 [label="False",fontcolor="RED"];
Node_17 -> Node_18;
}
